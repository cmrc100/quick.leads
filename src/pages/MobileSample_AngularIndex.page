<apex:page showHeader="false" sidebar="false" standardStylesheets="false">
<html ng-app="AngularSFDemo">
    
<head>
<meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0"/>
    <style>
        body {
            padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
        }

        .button {
            text-align: center;
        }
    </style>
	<script type="text/javascript">
    	//Get configuration from environment variables (via heroku or localhost env)
    	var configFromEnv = {};
    	configFromEnv.client_id    = "<%= client_id %>";
    	configFromEnv.app_url = "<%= app_url %>";
        configFromEnv.sessionId = "{!$API.session_Id}";
	</script>
        
    <link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css" rel="stylesheet" />
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js"></script>

    <script src="{!URLFOR($Resource.MobileSample_Resources_Angular, 'resources/js/forcetk.js')}"></script>
    <script src="{!URLFOR($Resource.MobileSample_Resources_Angular, 'resources/js/angular-force.js')}"></script>
    <script src="{!URLFOR($Resource.MobileSample_Resources_Angular, 'resources/js/init.js')}"></script>
    <script src="{!URLFOR($Resource.MobileSample_Resources_Angular, 'resources/js/app.js')}"></script> 
    

</head>
<body>
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container">
            <a class="brand" href="#">Salesforce Contacts</a>
        </div>
    </div>
</div>
<div class="container">
    <div class="ngView"></div>
</div>
<!-- 
<script type="text/javascript">
// BEGIN init.js
var app = angular.module('AngularSFDemo', ['AngularForce', 'AngularForceObjectFactory', 'Contact', 'ParentCampaign']);
app.constant('SFConfig', getSFConfig());

/**
 * Configure all the AngularJS routes here.
 */
app.config(function ($routeProvider) {
    $routeProvider.
        when('/', {controller: HomeCtrl, templateUrl: 'apex/MobileSample_AngularHome'}).
        when('/login', {controller: LoginCtrl, templateUrl: 'apex/MobileSample_AngularLogin'}).
        when('/contacts', {controller: ContactListCtrl, templateUrl: 'apex/MobileSample_AngularList'}).
        when('/edit/:contactId', { controller: ContactDetailCtrl, templateUrl: 'apex/MobileSample_AngularEdit'}).
        when('/new', { controller: ContactCreateCtrl, templateUrl: 'apex/MobileSample_AngularDetail'}).
        when('/view/:contactId', {controller: ContactViewCtrl, templateUrl: 'apex/MobileSample_AngularView'}).
        when('/parentCampaigns', {controller: CampaignListCtrl, templateUrl: 'apex/EventLead_ParentCampaign'}).
        otherwise({redirectTo: '/'});
});


/**
 * Please configure Salesforce consumerkey, proxyUrl etc in getSFConfig().
 *
 * SFConfig is a central configuration JS Object. It is used by angular-force.js and also your app to set and retrieve
 * various configuration or authentication related information.
 *
 * Note: Please configure SFConfig Salesforce consumerkey, proxyUrl etc in getSFConfig() below.
 *
 * @property SFConfig Salesforce Config object with the following properties.
 * @attribute {String} sfLoginURL       Salesforce login url
 * @attribute {String} consumerKey      Salesforce app's consumer key
 * @attribute {String} oAuthCallbackURL OAuth Callback URL. Note: If you are running on Heroku or elsewhere you need to set this.
 * @attribute {String} proxyUrl         URL to proxy cross-domain calls. Note: This nodejs app acts as a proxy server as well at <location>/proxy/
 * @attribute {String} client           ForcetkClient. Set by forcetk lib
 * @attribute {String} sessionId        Session Id. Set by forcetk lib
 * @attribute {String} apiVersion       REST Api version. Set by forcetk (Set this manually for visualforce)
 * @attribute {String} instanceUrl      Your Org. specific url. Set by forcetk.
 *
 * @returns SFConfig object depending on where (localhost v/s heroku v/s visualforce) the app is running.
 */
function getSFConfig() {
    var location = document.location;
    var href = location.href;
    if (href.indexOf('file:') >= 0) { //Phonegap 
        return {};
    } else {
        if (configFromEnv.sessionId) {
            return {
                sessionId: configFromEnv.sessionId
            }
        } else {
            if (!configFromEnv || configFromEnv.client_id == "" || configFromEnv.client_id == "undefined"
                || configFromEnv.app_url == "" || configFromEnv.app_url == "undefined") {
                throw 'Environment variable client_id and/or app_url is missing. Please set them before you start the app';
            }
            return {
                sfLoginURL: 'https://login.salesforce.com/',
                consumerKey: configFromEnv.client_id,
                oAuthCallbackURL: removeTrailingSlash(configFromEnv.app_url) + '/#/callback',
                proxyUrl: removeTrailingSlash(configFromEnv.app_url) + '/proxy/'
            }
        }
    }
}

//Helper
function removeTrailingSlash(url) {
    return url.replace(/\/$/, "");
}
//END OF init.js

// BEGIN app.js
/**
 * Describe Salesforce object to be used in the app. For example: Below AngularJS factory shows how to describe and
 * create an 'Contact' object. And then set its type, fields, where-clause etc.
 *
 *  PS: This module is injected into ListCtrl, EditCtrl etc. controllers to further consume the object.
 */
angular.module('Contact', []).factory('Contact', function (AngularForceObjectFactory) {
    //Describe the contact object
    var objDesc = {
        type: 'Contact',
        fields: ['FirstName', 'LastName', 'Title', 'Phone', 'Email', 'Id', 'Account.Name'],
        where: '',
        orderBy: 'LastName',
        limit: 20
    };
    var Contact = AngularForceObjectFactory(objDesc);

    return Contact;
});
    
angular.module('ParentCampaign', []).factory('ParentCampaign', function (AngularForceObjectFactory) {
               //
    var objDesc = {
   		type: 'Campaign',
    	fields: ['Name', 'Description', 'StartDate', 'EndDate', 'Status', 'Type', 'NumberOfLeads', 'NumberOfContacts', 'NumberOfResponses'],
    	where: 'ParentId = null AND Type = \'Seminar / Conference\'',
    	orderBy: 'Name',
    	limit: 20
    }
    var ParentCampaign = AngularForceObjectFactory(objDesc);
    
    return ParentCampaign;
});


function HomeCtrl($scope, AngularForce, $location, $route) {

    $scope.authenticated = AngularForce.authenticated();
    if (!$scope.authenticated) {
        if (AngularForce.inVisualforce) {
            AngularForce.login();
        } else {    
            return $location.path('/login');
        }
    }

    $scope.viewContacts = function() {
        console.log("HomeCtrl go to contacts...");
        $location.path('/contacts');
    }

    $scope.viewCampaigns = function() {
        console.log("HomeCtrl go to contacts...");
        $location.path('/parentCampaigns');
    }        
    $scope.logout = function () {
        AngularForce.logout();
        $location.path('/login');
    }
}

function LoginCtrl($scope, AngularForce, $location) {
    $scope.login = function () {
        AngularForce.login();
    }

    if (AngularForce.inVisualforce) {
        AngularForce.login();
        console.log("LoginCtrl just authenticated go to /");
        $location.path('/');
    }
}

function CallbackCtrl($scope, AngularForce, $location) {
    AngularForce.oauthCallback(document.location.href);
    $location.path('/contacts');
}

function ContactListCtrl($scope, AngularForce, $location, Contact) {
    $scope.authenticated = AngularForce.authenticated();
    if (!$scope.authenticated) {
        return $location.path('/login');
    }

    $scope.searchTerm = '';
    $scope.working = false;

    Contact.query(function (data) {
        $scope.contacts = data.records;
        $scope.$apply();//Required coz sfdc uses jquery.ajax
    }, function (data) {
        alert('Query Error');
    });

    $scope.isWorking = function () {
        return $scope.working;
    };

    $scope.doSearch = function () {
        Contact.search($scope.searchTerm, function (data) {
            $scope.contacts = data;
            $scope.$apply();//Required coz sfdc uses jquery.ajax
        }, function (data) {
        });
    };

    $scope.doView = function (contactId) {
        console.log('doView');
        $location.path('/view/' + contactId);
    };

    $scope.doCreate = function () {
        $location.path('/new');
    }
}

function CampaignListCtrl($scope, AngularForce, $location, ParentCampaign) {
    $scope.authenticated = AngularForce.authenticated();
    if (!$scope.authenticated) {
        return $location.path('/login');
    }

    $scope.searchTerm = '';
    $scope.working = false;

    ParentCampaign.query(function (data) {
        $scope.campaigns = data.records;
        $scope.$apply();//Required coz sfdc uses jquery.ajax
    }, function (data) {
        alert('Query Error');
    });

    $scope.isWorking = function () {
        return $scope.working;
    };

    $scope.doSearch = function () {
        ParentCampaign.search($scope.searchTerm, function (data) {
            $scope.campaigns = data;
            $scope.$apply();//Required coz sfdc uses jquery.ajax
        }, function (data) {
        });
    };

    $scope.doView = function (campaignId) {
        console.log('doView');
        $location.path('/view/' + campaignId);
    };

    $scope.doCreate = function () {
        $location.path('/new');
    }
}
    
    
function ContactCreateCtrl($scope, $location, Contact) {
    $scope.save = function () {
        Contact.save($scope.contact, function (contact) {
            var c = contact;
            $scope.$apply(function () {
                $location.path('/view/' + c.Id);
            });
        });
    }
}

function ContactViewCtrl($scope, AngularForce, $location, $routeParams, Contact) {

    AngularForce.login(function () {
        Contact.get({id: $routeParams.contactId}, function (contact) {
            self.original = contact;
            $scope.contact = new Contact(self.original);
            $scope.$apply();//Required coz sfdc uses jquery.ajax
        });
    });

}

function ContactDetailCtrl($scope, AngularForce, $location, $routeParams, Contact) {
    var self = this;

    if ($routeParams.contactId) {
        AngularForce.login(function () {
            Contact.get({id: $routeParams.contactId}, function (contact) {
                self.original = contact;
                $scope.contact = new Contact(self.original);
                $scope.$apply();//Required coz sfdc uses jquery.ajax
            });
        });
    } else {
        $scope.contact = new Contact();
        //$scope.$apply();
    }

    $scope.isClean = function () {
        return angular.equals(self.original, $scope.contact);
    }

    $scope.destroy = function () {
        self.original.destroy(
            function () {
                $scope.$apply(function () {
                    $location.path('/contacts');
                });
            },
            function(errors) {
                alert("Could not delete contact!\n" + JSON.parse(errors.responseText)[0].message);
            }
        );
    };

    $scope.save = function () {
        if ($scope.contact.Id) {
            $scope.contact.update(function () {
                $scope.$apply(function () {
                    $location.path('/view/' + $scope.contact.Id);
                });

            });
        } else {
            Contact.save($scope.contact, function (contact) {
                var p = contact;
                $scope.$apply(function () {
                    $location.path('/view/' + p.id);
                });
            });
        }
    };

    $scope.doCancel = function () {
        if ($scope.contact.Id) {
            $location.path('/view/' + $scope.contact.Id);
        } else {
            $location.path('/contacts');
        }
    }
}
//END OF app.js
</script>
 -->
</body>
</html>
</apex:page>